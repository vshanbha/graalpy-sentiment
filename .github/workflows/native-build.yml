name: Native Build

on:
  workflow_run:
    workflows: ["Release"]
    types: [completed]
    branches: [main]

permissions:
  contents: write  # Needed to upload assets to a release

jobs:
  native-build:
    name: Native Image Build
    runs-on: self-hosted

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME="${GITHUB_REF##*/}"         # e.g., v1.2.3
          VERSION="${TAG_NAME#v}"              # Strip the 'v' prefix
          echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_TAG=$TAG_NAME" >> $GITHUB_ENV
      - name: Download upload_url artifact
        uses: actions/download-artifact@v4
        with:
          name: upload-url
  
      - name: Load upload URL from artifact
        run: |
          UPLOAD_URL=$(cat upload_url.txt)
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV
          echo $UPLOAD_URL
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm'
          components: native-image
          cache: maven
          native-image-job-reports: true

      - name: Verify GraalVM Environment
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          if [[ -z "$GRAALVM_HOME" ]]; then
            echo "❌ GRAALVM_HOME is not set. Runner may be misconfigured."
            exit 1
          fi
          if ! command -v native-image &> /dev/null; then
            echo "❌ native-image command not found."
            exit 1
          fi
          java --version
          native-image --version

      - name: Build Native Image
        run: mvn -Pnative native:compile
      - name: List target directory
        run: ls -lh target/
      - name: Upload Native Image Asset
        id: upload-native-asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./target/graalpy-sentiment
          asset_name: graalpy-sentiment
          asset_content_type: application/octet-stream
