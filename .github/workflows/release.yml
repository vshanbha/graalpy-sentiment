name: Release
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
  jar-build:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Extract version from git tag
      id: version
      run: |
        TAG_NAME="${GITHUB_REF##*/}"         # e.g., v1.2.3 or 1.2.3
        VERSION="${TAG_NAME#v}"               # remove 'v' prefix if present
        echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV   
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: List contents of target directory
      run: ls -l ./target/
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./target/graalpy-sentiment-${{ github.ref_name }}.jar
        asset_name: graalpy-sentiment-${{ github.ref_name }}.jar
        asset_content_type: application/java-archive

  native-build:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Extract version from git tag
      id: version
      run: |
        TAG_NAME="${GITHUB_REF##*/}"         # e.g., v1.2.3 or 1.2.3
        VERSION="${TAG_NAME#v}"               # remove 'v' prefix if present
        echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV   
    - name: Install GraalVM
      uses: graalvm/setup-graalvm@v1
      with:  
        java-version: '24'
        distribution: 'graalvm'
        components: native-image
        cache: maven
        native-image-job-reports: 'true'
    - name: Print Java versions
      run: |
        echo "GRAALVM_HOME: $GRAALVM_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        java --version
        native-image --version        
    - name: Build Native Image
      run: mvn -Pnative native:compile
    - name: List contents of target directory
      run: ls -l ./target/
    - name: Upload Native Image Asset
      id: upload-native-asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./target/graalpy-sentiment
        asset_name: graalpy-sentiment
        asset_content_type: application/octet-stream
