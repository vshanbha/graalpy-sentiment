name: Java CI Release with Maven
permissions:
  contents: write

on:
  push:
#    tags:
#      - 'R-*'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
    - name: Install GraalVM
      uses: graalvm/setup-graalvm@v1
      with:  
        java-version: '17'
        distribution: 'graalvm'
        version: '24.2.1'
        components: native-image
        cache: maven
        native-image-job-reports: 'true'
    - name: Print Java versions
      run: |
        echo "GRAALVM_HOME: $GRAALVM_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        java --version
        native-image --version        
    - name: Build Native Image
      run: mvn -Pnative native:compile
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      with:
#        tag_name: ${{ github.ref_name }}
#        release_name: Release ${{ github.ref_name }}
#        draft: false
#        prerelease: false
#    - name: Upload Release Asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./target/*.jar
#        asset_name: your-app-name.jar
#        asset_content_type: application/java-archive
#    - name: Upload Native Image Asset
#      id: upload-native-asset
#      uses: actions/upload-release-asset@v1
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./target/your-app-name
#        asset_name: your-app-name-linux
#        asset_content_type: application/octet-stream
